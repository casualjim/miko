[package]
name = "miko"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { version = "0.6.4", features = ["macros"], optional = true }
console_error_panic_hook = "0.1"
console_log = "1"
cfg-if = "1"
futures = "0.3.25"
gloo-net = { version = "0.5", optional = true }
gloo-storage = { version = "0.3", optional = true }
# gloo-events = { version = "0.2", optional = true }
gloo-events = { version = "0.2" }
leptos = { version = "0.5", features = ["nightly", "rustls"] }
leptos_axum = { version = "0.5", optional = true }
leptos_meta = { version = "0.5", features = ["nightly"] }
leptos_router = { version = "0.5", features = ["nightly"] }
log = "0.4"
pretty_env_logger = "0.4"
tokio = { version = "1.25.0", optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.4", features = ["fs"], optional = true }
wasm-bindgen = "0.2"
thiserror = "1.0.38"
tracing = { version = "0.1.37", optional = true }
http = "0.2.11"
phosphor-leptos = "0.2.1"
sqlx = { version = "0.7.3", features = [
  "postgres",
  "macros",
  "chrono",
  "runtime-tokio-rustls",
  "json",
  "uuid",
], optional = true }
dotenvy = { version = "0.15.7", optional = true, features = ["clap"] }
axum_session_auth = { version = "0.9.0", features = [
  "postgres-rustls",
], optional = true }
axum_session = { version = "0.9.0", features = [
  "postgres-rustls",
], optional = true }
serde = { version = "1.0.194", features = ["derive"] }
struct-convert = { version = "1.3.1", optional = true }
uuid = { version = "1.6.1", features = ["wasm-bindgen", "serde"] }
serde_json = { version = "1.0.111" }
async-trait = { version = "0.1.77", optional = true }
anyhow = { version = "1.0.79", optional = true }
chrono = { version = "0.4.31", features = ["serde"] }
bcrypt = { version = "0.15.0", optional = true }
oauth2 = { version = "4.4.2", optional = true }
ttl_cache = { version = "0.5.1", optional = true }
reqwest = { version = "0.11.23", optional = true, default-features = false, features = [
  "rustls-tls",
  "json",
] }
web-sys = { version = "0.3.66", features = ["Node"] }
async-openai = { version = "0.18.0", default-features = false, features = [
  "rustls-webpki-roots",
], optional = true }
derive_builder = "0.12.0"


[features]
hydrate = [
  "leptos/hydrate",
  "leptos_meta/hydrate",
  "leptos_router/hydrate",
  "dep:gloo-net",
  "dep:gloo-storage",
]
ssr = [
  "dep:axum",
  "dep:tokio",
  "dep:tower",
  "dep:tower-http",
  "dep:leptos_axum",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "dep:tracing",
  "dep:sqlx",
  "dep:dotenvy",
  "dep:axum_session_auth",
  "dep:axum_session",

  "dep:async-trait",
  "dep:anyhow",
  "dep:struct-convert",
  "dep:bcrypt",
  "dep:oauth2",
  "dep:ttl_cache",
  "dep:reqwest",
  "dep:async-openai",
]

[build-dependencies]
clap_mangen = "0.2"
# sqlx = { version = "0.7", features = [
#   "postgres",
#   "macros",
#   "chrono",
#   "runtime-tokio-rustls",
#   "json",
#   "uuid",
# ] }
clap = { version = "4", features = ["derive"] }

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "miko"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# Optional, Activates the tailwind build
tailwind-input-file = "style/tailwind.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
